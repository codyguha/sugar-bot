<!DOCTYPE html>
<html dir="ltr" lang="en-US">
<% include ./partials/head %>

<body>
  <div class="description">  <p><%= description %></p></div>

  <div class="content">
    <form id="sugarList2" method="post" action="<%= action %>">
      <input id="facebook_id" type="hidden" name='fb_id'>

      <ol id="rankinglist" style="list-style:none;">
        <li>
          <div id="top-rank" class="sugarbutton">
            <label>
              <span style="color: white;"><%= Hrank %></span>
            </label>
          </div>
        </li>

        <% for(var i=0; i<list.length; i++) {%>
          <li>
            <div class="sugarbutton" draggable="true">
              <label>
                <input type="hidden" name='<%= list[i] %>'><span><%= list[i] %></span>
              </label>
            </div>
          </li>
        <% } %>

        <li>
          <div id="low-rank" class="sugarbutton">
            <label>
              <span style="color: white;"><%= Lrank %></span>
            </label>
          </div>
        </li>

      </ol>

      <div id="submit" class="fixed-action-btn">
        <a class="btn-floating btn-large blue">
          <i class="material-icons">send</i>
         </a>
     </div>
    </form>
  </div>
<script>

window.extAsyncInit = function() {
  MessengerExtensions.getUserID(function success(uids) {
       var psid = uids.psid.toString();
       $("#facebook_id").val(psid)
     }, function error(err) {

     });
};
var dragSrcEl = null;

function handleDragStart(e) {
  // this.style.opacity = '0.4';  // this / e.target is the source node.

  dragSrcEl = this;

  e.dataTransfer.effectAllowed = 'move';
  e.dataTransfer.setData('text/html', this.innerHTML);
}
function handleDragOver(e) {
  if (e.preventDefault) {
    e.preventDefault(); // Necessary. Allows us to drop.
  }

  e.dataTransfer.dropEffect = 'move';  // See the section on the DataTransfer object.

  return false;
}
function handleDragEnter(e) {
  // this / e.target is the current hover target.
  this.classList.add('over');
}

function handleDragLeave(e) {
  this.classList.remove('over');  // this / e.target is previous target element.
}
function handleDrop(e) {
  // this / e.target is current target element.

  if (e.stopPropagation) {
    e.stopPropagation(); // stops the browser from redirecting.
  }

  // Don't do anything if dropping the same column we're dragging.
  if (dragSrcEl != this) {
     // Set the source column's HTML to the HTML of the column we dropped on.
     dragSrcEl.innerHTML = this.innerHTML;
     this.innerHTML = e.dataTransfer.getData('text/html');
  }

  return false;
}
function handleDragEnd(e) {
  // this/e.target is the source node.

  [].forEach.call(rows, function (row) {
    row.classList.remove('over');
  });
}
var rows = document.querySelectorAll('#rankinglist .sugarbutton');
[].forEach.call(rows, function(row) {
  row.addEventListener('dragstart', handleDragStart, false);
  row.addEventListener('dragenter', handleDragEnter, false);
  row.addEventListener('dragover', handleDragOver, false);
  row.addEventListener('dragleave', handleDragLeave, false);
  row.addEventListener('drop', handleDrop, false);
  row.addEventListener('dragend', handleDragEnd, false);
});

$('#submit').click(function (evt) {
    $('form').submit();
    evt.preventDefault();
    MessengerExtensions.requestCloseBrowser(function success() {}, function error(err) {});
});

</script>
</body>
