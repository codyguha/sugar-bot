<!DOCTYPE html>
<html dir="ltr" lang="en-US">
<% include ./partials/head %>



<body>
<form id="sugarList" method="post" action="/list">
  <input id="facebook_id" type="hidden" name='fb_id'>

  <% for(var i=0; i<list.length; i++) {%>
    <div id="sugarbutton" draggable="true">
      <label>
        <input type="checkbox" name='<%= list[i] %>'><span><%= list[i] %></span>
      </label>
    </div>
  <% } %>

  <div id="sugarbutton" class="done">
     <label>
        <input type="hidden" value='Done'><span>Done</span>
     </label>
  </div>
</form>

<script>
window.extAsyncInit = function() {
  MessengerExtensions.getUserID(function success(uids) {
       var psid = uids.psid.toString();
       $("#facebook_id").val(psid)
     }, function error(err) {

     });
};

var dragSrcEl = null;

function handleDragStart(e) {
  this.style.opacity = '0.4';  // this / e.target is the source node.

  dragSrcEl = this;

    e.dataTransfer.effectAllowed = 'move';
    e.dataTransfer.setData('text/html', this.innerHTML);

}

function handleDragOver(e) {
  if (e.preventDefault) {
    e.preventDefault(); // Necessary. Allows us to drop.
  }

  e.dataTransfer.dropEffect = 'move';  // See the section on the DataTransfer object.

  return false;
}

function handleDragEnter(e) {
  // this / e.target is the current hover target.
  this.classList.add('over');
}

function handleDragLeave(e) {
  this.classList.remove('over');  // this / e.target is previous target element.
}

function handleDrop(e) {
  // this / e.target is current target element.

  if (e.stopPropagation) {
    e.stopPropagation(); // stops the browser from redirecting.
  }

  // Don't do anything if dropping the same column we're dragging.
  if (dragSrcEl != this) {
    // Set the source column's HTML to the HTML of the column we dropped on.
    dragSrcEl.innerHTML = this.innerHTML;
    this.innerHTML = e.dataTransfer.getData('text/html');
  }

  return false;
}

function handleDragEnd(e) {
  // this/e.target is the source node.
  this.style.opacity = '1';
  [].forEach.call(items, function (item) {
    item.classList.remove('over');
  });
}

var items = document.querySelectorAll('#sugarbutton');
[].forEach.call(items, function(item) {
  item.addEventListener('dragstart', handleDragStart, false);
  item.addEventListener('dragenter', handleDragEnter, false);
  item.addEventListener('dragover', handleDragOver, false);
  item.addEventListener('dragleave', handleDragLeave, false);
  item.addEventListener('drop', handleDrop, false);
  item.addEventListener('dragend', handleDragEnd, false);
});

$('#sugarbutton.done').click(function (evt) {
    $('form').submit();
    evt.preventDefault();
    MessengerExtensions.requestCloseBrowser(function success() {

      }, function error(err) {

      });
});

</script>
</body>
